// ======================================== -->
// üö® Cache Buster - ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô Browser Caching
// Green Blue Rest Bangkok Website
// ======================================== -->

(function() {
    'use strict';
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° version parameter ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå CSS ‡πÅ‡∏•‡∏∞ JS
    function addVersionToAssets() {
        const timestamp = Date.now();
        
        // ‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå CSS ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        const cssLinks = document.querySelectorAll('link[rel="stylesheet"]');
        cssLinks.forEach(link => {
            if (link.href && !link.href.includes('?v=')) {
                link.href = link.href + '?v=' + timestamp;
            }
        });
        
        // ‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå JavaScript ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        const scriptTags = document.querySelectorAll('script[src]');
        scriptTags.forEach(script => {
            if (script.src && !script.src.includes('?v=')) {
                script.src = script.src + '?v=' + timestamp;
            }
        });
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° version parameter ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    function addVersionToImages() {
        const timestamp = Date.now();
        const images = document.querySelectorAll('img[src]');
        
        images.forEach(img => {
            if (img.src && !img.src.includes('?v=')) {
                img.src = img.src + '?v=' + timestamp;
            }
        });
    }
    
    // ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', function() {
            addVersionToAssets();
            addVersionToImages();
        });
    } else {
        addVersionToAssets();
        addVersionToImages();
    }
    
    // ======================================== -->
    // üö® PERFORMANCE FIX: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç setTimeout ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ requestAnimationFrame
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° cleanup ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô memory leak
    // ======================================== -->
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° version parameter ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡∏î‡πâ‡∏ß‡∏¢ JavaScript
    window.addEventListener('load', function() {
        // ‡πÉ‡∏ä‡πâ requestAnimationFrame ‡πÅ‡∏ó‡∏ô setTimeout ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤
        requestAnimationFrame(function() {
            addVersionToImages();
        });
    });
    
    // Cleanup function
    function cleanupCacheBuster() {
        // ‡∏•‡πâ‡∏≤‡∏á event listeners ‡πÅ‡∏•‡∏∞ timers
        if (window.cacheBusterCleanup) {
            window.cacheBusterCleanup();
        }
    }
    
    // ‡πÄ‡∏Å‡πá‡∏ö cleanup function ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô window object
    window.cacheBusterCleanup = cleanupCacheBuster;
    
    // Cleanup ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏ñ‡∏π‡∏Å unload
    window.addEventListener('beforeunload', cleanupCacheBuster);
    window.addEventListener('pagehide', cleanupCacheBuster);
    
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏° version parameter ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö URL
    window.addVersionToUrl = function(url) {
        if (!url) return url;
        const separator = url.includes('?') ? '&' : '?';
        return url + separator + 'v=' + Date.now();
    };
    
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö reload ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ cache
    window.hardReload = function() {
        window.location.reload(true);
    };
    
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö reload ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ cache
    window.softReload = function() {
        window.location.reload(false);
    };
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
    window.checkForUpdates = function() {
        const lastUpdate = localStorage.getItem('lastUpdate');
        const currentTime = Date.now();
        
        if (!lastUpdate || (currentTime - parseInt(lastUpdate)) > 300000) { // 5 minutes
            localStorage.setItem('lastUpdate', currentTime.toString());
            window.hardReload();
        }
    };
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡πâ‡∏≤‡∏á localStorage cache
    window.clearSiteCache = function() {
        localStorage.clear();
        sessionStorage.clear();
        if ('caches' in window) {
            caches.keys().then(names => {
                names.forEach(name => caches.delete(name));
            });
        }
        console.log('üßπ Site cache cleared!');
        window.hardReload();
    };
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö service worker
    window.refreshServiceWorker = function() {
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.getRegistrations().then(registrations => {
                registrations.forEach(registration => {
                    registration.update();
                });
            });
        }
    };

    // ======================================== -->
    // üö® CODE QUALITY FIX: ‡∏•‡∏ö Console Logs ‡πÉ‡∏ô Production
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° environment-based logging
    // ======================================== -->
    
    // Environment-based logging function
    function safeLog(message, type = 'info') {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô development environment ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const isDevelopment = window.location.hostname === 'localhost' || 
                            window.location.hostname === '127.0.0.1' ||
                            window.location.hostname.includes('dev') ||
                            window.location.hostname.includes('staging');
        
        if (isDevelopment) {
            switch(type) {
                case 'warn':
                    console.warn(message);
                    break;
                case 'error':
                    console.error(message);
                    break;
                default:
                    console.log(message);
            }
        }
    }
    
    // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç console.log ‡πÉ‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ
    safeLog('üßπ Site cache cleared!');
    
    // Fallback function ‡∏ñ‡πâ‡∏≤ PhotoSwipe ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    function handlePhotoSwipeError() {
        safeLog('PhotoSwipe failed to load, using fallback lightbox', 'warn');
        // ‡πÉ‡∏ä‡πâ fallback lightbox ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡πÉ‡∏´‡∏°‡πà
    }
    
})();
