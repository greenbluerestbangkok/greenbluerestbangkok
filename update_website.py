#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üåê Website Update Tool - GreenBlueRest Bangkok
üêç Python Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
üìÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏° 2025
"""

import os
import shutil
import json
import re
from datetime import datetime
import tkinter as tk
from tkinter import ttk, messagebox, filedialog
import webbrowser

class WebsiteUpdater:
    def __init__(self):
        self.website_path = os.getcwd()
        self.backup_path = os.path.join(self.website_path, "backup")
        self.timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå backup ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
        if not os.path.exists(self.backup_path):
            os.makedirs(self.backup_path)
    
    def create_backup(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á"""
        try:
            backup_folder = os.path.join(self.backup_path, f"backup_{self.timestamp}")
            shutil.copytree(self.website_path, backup_folder, 
                           ignore=shutil.ignore_patterns('backup', '__pycache__', '*.pyc'))
            return backup_folder
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á: {e}")
            return None
    
    def update_trip_info(self, trip_id, new_name, new_price, new_description):
        """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ"""
        try:
            # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï JavaScript
            js_file = os.path.join(self.website_path, "js", "trip-details.js")
            if os.path.exists(js_file):
                with open(js_file, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                # ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ
                pattern = rf'id:\s*{trip_id},[^}}]+}}'
                new_trip_data = f"""    {{
        id: {trip_id},
        name: "{new_name}",
        shortDescription: "{new_description}",
        fullDescription: "{new_description}",
        price: "{new_price}",
        duration: "3-4 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á",
        capacity: "2-8 ‡∏Ñ‡∏ô",
        schedule: "‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô 8:00-17:00",
        mainImage: "../images/trip{trip_id}/small/trip{trip_id}-1.jpg",
        gallery: [
            "../images/trip{trip_id}/large/trip{trip_id}-1.jpg",
            "../images/trip{trip_id}/large/trip{trip_id}-2.jpg",
            "../images/trip{trip_id}/large/trip{trip_id}-3.jpg"
        ],
        highlights: [
            "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à",
            "‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©",
            "‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÉ‡∏´‡∏°‡πà",
            "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡∏∏‡∏Å‡∏™‡∏ô‡∏≤‡∏ô",
            "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢"
        ],
        includes: [
            "‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô",
            "‡πÑ‡∏Å‡∏î‡πå‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô",
            "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°",
            "‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏",
            "‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏•‡∏∂‡∏Å"
        ]
    }}"""
                
                # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ
                if re.search(pattern, content):
                    content = re.sub(pattern, new_trip_data, content)
                    
                    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå
                    with open(js_file, 'w', encoding='utf-8') as f:
                        f.write(content)
                    
                    print(f"‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ‡∏ó‡∏µ‡πà {trip_id} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                    return True
                else:
                    print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ‡∏ó‡∏µ‡πà {trip_id}")
                    return False
            else:
                print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå trip-details.js")
                return False
                
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ: {e}")
            return False
    
    def update_product_info(self, product_id, new_name, new_price, new_description):
        """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"""
        try:
            # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï JavaScript
            js_file = os.path.join(self.website_path, "js", "products.js")
            if os.path.exists(js_file):
                with open(js_file, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                # ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                pattern = rf'id:\s*{product_id},[^}}]+}}'
                new_product_data = f"""    {{
        id: {product_id},
        name: "{new_name}",
        description: "{new_description}",
        price: "{new_price}",
        category: "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ä‡∏∏‡∏°‡∏ä‡∏ô",
        image: "images/products/product{product_id}.jpg"
    }}"""
                
                # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                if re.search(pattern, content):
                    content = re.sub(pattern, new_product_data, content)
                    
                    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå
                    with open(js_file, 'w', encoding='utf-8') as f:
                        f.write(content)
                    
                    print(f"‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà {product_id} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                    return True
                else:
                    print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà {product_id}")
                    return False
            else:
                print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå products.js")
                return False
                
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: {e}")
            return False
    
    def update_website_name(self, new_name):
        """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå"""
        try:
            files_to_update = [
                "index.html",
                "pages/trips.html",
                "pages/products.html",
                "pages/contact.html",
                "pages/low-carbon.html",
                "pages/activities.html"
            ]
            
            for file_path in files_to_update:
                full_path = os.path.join(self.website_path, file_path)
                if os.path.exists(full_path):
                    with open(full_path, 'r', encoding='utf-8') as f:
                        content = f.read()
                    
                    # ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
                    content = content.replace("GreenBlueRest Bangkok", new_name)
                    content = content.replace("Green Blue Rest Bangkok", new_name)
                    
                    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå
                    with open(full_path, 'w', encoding='utf-8') as f:
                        f.write(content)
                    
                    print(f"‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÉ‡∏ô {file_path} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            
            return True
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå: {e}")
            return False
    
    def update_contact_info(self, new_email, new_phone, new_line):
        """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠"""
        try:
            files_to_update = [
                "index.html",
                "pages/trips.html",
                "pages/products.html",
                "pages/contact.html",
                "pages/low-carbon.html",
                "pages/activities.html"
            ]
            
            for file_path in files_to_update:
                full_path = os.path.join(self.website_path, file_path)
                if os.path.exists(full_path):
                    with open(full_path, 'r', encoding='utf-8') as f:
                        content = f.read()
                    
                    # ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
                    if new_email:
                        content = re.sub(r'contact@[^\s<>"]+', new_email, content)
                    if new_phone:
                        content = re.sub(r'08x-xxx-xxxx', new_phone, content)
                    if new_line:
                        content = re.sub(r'@[^\s<>"]+', f"@{new_line}", content)
                    
                    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå
                    with open(full_path, 'w', encoding='utf-8') as f:
                        f.write(content)
                    
                    print(f"‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÉ‡∏ô {file_path} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            
            return True
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: {e}")
            return False
    
    def preview_changes(self, file_path):
        """‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á"""
        try:
            if os.path.exists(file_path):
                with open(file_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
                lines = content.split('\n')
                preview_lines = lines[:20]  # ‡πÅ‡∏™‡∏î‡∏á 20 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÅ‡∏£‡∏Å
                
                print(f"\nüìÑ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ô {file_path}:")
                print("=" * 50)
                for i, line in enumerate(preview_lines, 1):
                    print(f"{i:2d}: {line}")
                print("=" * 50)
                
                return True
            else:
                print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå {file_path}")
                return False
                
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: {e}")
            return False

class WebsiteUpdaterGUI:
    def __init__(self):
        self.updater = WebsiteUpdater()
        self.setup_gui()
    
    def setup_gui(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á GUI"""
        self.root = tk.Tk()
        self.root.title("üåê Website Update Tool - GreenBlueRest Bangkok")
        self.root.geometry("800x600")
        self.root.configure(bg='#f0f0f0')
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Notebook ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡πá‡∏ö‡∏ï‡πà‡∏≤‡∏á‡πÜ
        self.notebook = ttk.Notebook(self.root)
        self.notebook.pack(fill='both', expand=True, padx=10, pady=10)
        
        # ‡πÅ‡∏ó‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ
        self.create_trip_tab()
        
        # ‡πÅ‡∏ó‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        self.create_product_tab()
        
        # ‡πÅ‡∏ó‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
        self.create_website_tab()
        
        # ‡πÅ‡∏ó‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
        self.create_contact_tab()
        
        # ‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠
        self.create_tools_tab()
    
    def create_trip_tab(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ó‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ"""
        trip_frame = ttk.Frame(self.notebook)
        self.notebook.add(trip_frame, text="üéí ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ")
        
        # ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
        ttk.Label(trip_frame, text="‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ", font=('Arial', 16, 'bold')).pack(pady=10)
        
        # ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ
        form_frame = ttk.Frame(trip_frame)
        form_frame.pack(pady=20, padx=20, fill='x')
        
        ttk.Label(form_frame, text="ID ‡∏ó‡∏£‡∏¥‡∏õ:").grid(row=0, column=0, sticky='w', pady=5)
        self.trip_id_var = tk.StringVar(value="1")
        ttk.Entry(form_frame, textvariable=self.trip_id_var, width=10).grid(row=0, column=1, padx=5, pady=5)
        
        ttk.Label(form_frame, text="‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏£‡∏¥‡∏õ:").grid(row=1, column=0, sticky='w', pady=5)
        self.trip_name_var = tk.StringVar(value="‡∏ó‡∏£‡∏¥‡∏õ‡πÉ‡∏´‡∏°‡πà")
        ttk.Entry(form_frame, textvariable=self.trip_name_var, width=40).grid(row=1, column=1, padx=5, pady=5)
        
        ttk.Label(form_frame, text="‡∏£‡∏≤‡∏Ñ‡∏≤:").grid(row=2, column=0, sticky='w', pady=5)
        self.trip_price_var = tk.StringVar(value="500 ‡∏ö‡∏≤‡∏ó/‡∏Ñ‡∏ô")
        ttk.Entry(form_frame, textvariable=self.trip_price_var, width=20).grid(row=2, column=1, padx=5, pady=5)
        
        ttk.Label(form_frame, text="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:").grid(row=3, column=0, sticky='w', pady=5)
        self.trip_desc_var = tk.StringVar(value="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏ó‡∏£‡∏¥‡∏õ‡πÉ‡∏´‡∏°‡πà")
        ttk.Entry(form_frame, textvariable=self.trip_desc_var, width=40).grid(row=3, column=1, padx=5, pady=5)
        
        # ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
        ttk.Button(form_frame, text="‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ", 
                  command=self.update_trip).grid(row=4, column=0, columnspan=2, pady=20)
    
    def create_product_tab(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ó‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"""
        product_frame = ttk.Frame(self.notebook)
        self.notebook.add(product_frame, text="üõçÔ∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
        
        # ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
        ttk.Label(product_frame, text="‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", font=('Arial', 16, 'bold')).pack(pady=10)
        
        # ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        form_frame = ttk.Frame(product_frame)
        form_frame.pack(pady=20, padx=20, fill='x')
        
        ttk.Label(form_frame, text="ID ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:").grid(row=0, column=0, sticky='w', pady=5)
        self.product_id_var = tk.StringVar(value="1")
        ttk.Entry(form_frame, textvariable=self.product_id_var, width=10).grid(row=0, column=1, padx=5, pady=5)
        
        ttk.Label(form_frame, text="‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:").grid(row=1, column=0, sticky='w', pady=5)
        self.product_name_var = tk.StringVar(value="‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà")
        ttk.Entry(form_frame, textvariable=self.product_name_var, width=40).grid(row=1, column=1, padx=5, pady=5)
        
        ttk.Label(form_frame, text="‡∏£‡∏≤‡∏Ñ‡∏≤:").grid(row=2, column=0, sticky='w', pady=5)
        self.product_price_var = tk.StringVar(value="150 ‡∏ö‡∏≤‡∏ó")
        ttk.Entry(form_frame, textvariable=self.product_price_var, width=20).grid(row=2, column=1, padx=5, pady=5)
        
        ttk.Label(form_frame, text="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:").grid(row=3, column=0, sticky='w', pady=5)
        self.product_desc_var = tk.StringVar(value="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà")
        ttk.Entry(form_frame, textvariable=self.product_desc_var, width=40).grid(row=3, column=1, padx=5, pady=5)
        
        # ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
        ttk.Button(form_frame, text="‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", 
                  command=self.update_product).grid(row=4, column=0, columnspan=2, pady=20)
    
    def create_website_tab(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ó‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå"""
        website_frame = ttk.Frame(self.notebook)
        self.notebook.add(website_frame, text="üåê ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå")
        
        # ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
        ttk.Label(website_frame, text="‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå", font=('Arial', 16, 'bold')).pack(pady=10)
        
        # ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
        form_frame = ttk.Frame(website_frame)
        form_frame.pack(pady=20, padx=20, fill='x')
        
        ttk.Label(form_frame, text="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå:").grid(row=0, column=0, sticky='w', pady=5)
        self.website_name_var = tk.StringVar(value="GreenBlueRest Bangkok")
        ttk.Entry(form_frame, textvariable=self.website_name_var, width=40).grid(row=0, column=1, padx=5, pady=5)
        
        # ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
        ttk.Button(form_frame, text="‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå", 
                  command=self.update_website).grid(row=1, column=0, columnspan=2, pady=20)
    
    def create_contact_tab(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ó‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠"""
        contact_frame = ttk.Frame(self.notebook)
        self.notebook.add(contact_frame, text="üìû ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠")
        
        # ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
        ttk.Label(contact_frame, text="‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠", font=('Arial', 16, 'bold')).pack(pady=10)
        
        # ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
        form_frame = ttk.Frame(contact_frame)
        form_frame.pack(pady=20, padx=20, fill='x')
        
        ttk.Label(form_frame, text="Email:").grid(row=0, column=0, sticky='w', pady=5)
        self.contact_email_var = tk.StringVar(value="contact@greenbluerestbangkok.com")
        ttk.Entry(form_frame, textvariable=self.contact_email_var, width=40).grid(row=0, column=1, padx=5, pady=5)
        
        ttk.Label(form_frame, text="‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå:").grid(row=1, column=0, sticky='w', pady=5)
        self.contact_phone_var = tk.StringVar(value="08x-xxx-xxxx")
        ttk.Entry(form_frame, textvariable=self.contact_phone_var, width=20).grid(row=1, column=1, padx=5, pady=5)
        
        ttk.Label(form_frame, text="Line OA:").grid(row=2, column=0, sticky='w', pady=5)
        self.contact_line_var = tk.StringVar(value="greenbluerestbangkok")
        ttk.Entry(form_frame, textvariable=self.contact_line_var, width=30).grid(row=2, column=1, padx=5, pady=5)
        
        # ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
        ttk.Button(form_frame, text="‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠", 
                  command=self.update_contact).grid(row=3, column=0, columnspan=2, pady=20)
    
    def create_tools_tab(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠"""
        tools_frame = ttk.Frame(self.notebook)
        self.notebook.add(tools_frame, text="üõ†Ô∏è ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠")
        
        # ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
        ttk.Label(tools_frame, text="‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠", font=('Arial', 16, 'bold')).pack(pady=10)
        
        # ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ
        button_frame = ttk.Frame(tools_frame)
        button_frame.pack(pady=20, padx=20, fill='x')
        
        ttk.Button(button_frame, text="üìÅ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á", 
                  command=self.create_backup).pack(pady=10, fill='x')
        
        ttk.Button(button_frame, text="üìÑ ‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå", 
                  command=self.preview_file).pack(pady=10, fill='x')
        
        ttk.Button(button_frame, text="üåê ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå", 
                  command=self.open_website).pack(pady=10, fill='x')
        
        ttk.Button(button_frame, text="üìñ ‡πÄ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠", 
                  command=self.open_manual).pack(pady=10, fill='x')
    
    def update_trip(self):
        """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ"""
        try:
            trip_id = int(self.trip_id_var.get())
            trip_name = self.trip_name_var.get()
            trip_price = self.trip_price_var.get()
            trip_desc = self.trip_desc_var.get()
            
            if self.updater.update_trip_info(trip_id, trip_name, trip_price, trip_desc):
                messagebox.showinfo("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", f"‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ‡∏ó‡∏µ‡πà {trip_id} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            else:
                messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ‡πÑ‡∏î‡πâ")
                
        except ValueError:
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà ID ‡∏ó‡∏£‡∏¥‡∏õ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç")
        except Exception as e:
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    
    def update_product(self):
        """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"""
        try:
            product_id = int(self.product_id_var.get())
            product_name = self.product_name_var.get()
            product_price = self.product_price_var.get()
            product_desc = self.product_desc_var.get()
            
            if self.updater.update_product_info(product_id, product_name, product_price, product_desc):
                messagebox.showinfo("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", f"‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà {product_id} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            else:
                messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ")
                
        except ValueError:
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà ID ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç")
        except Exception as e:
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    
    def update_website(self):
        """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå"""
        try:
            website_name = self.website_name_var.get()
            
            if self.updater.update_website_name(website_name):
                messagebox.showinfo("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            else:
                messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÑ‡∏î‡πâ")
                
        except Exception as e:
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    
    def update_contact(self):
        """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠"""
        try:
            email = self.contact_email_var.get()
            phone = self.contact_phone_var.get()
            line = self.contact_line_var.get()
            
            if self.updater.update_contact_info(email, phone, line):
                messagebox.showinfo("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            else:
                messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ")
                
        except Exception as e:
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    
    def create_backup(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á"""
        try:
            backup_path = self.updater.create_backup()
            if backup_path:
                messagebox.showinfo("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", f"‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: {backup_path}")
            else:
                messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÑ‡∏î‡πâ")
        except Exception as e:
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    
    def preview_file(self):
        """‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå"""
        try:
            file_path = filedialog.askopenfilename(
                title="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π",
                filetypes=[("HTML files", "*.html"), ("JavaScript files", "*.js"), ("CSS files", "*.css"), ("All files", "*.*")]
            )
            
            if file_path:
                self.updater.preview_changes(file_path)
                
        except Exception as e:
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    
    def open_website(self):
        """‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå"""
        try:
            index_path = os.path.join(self.updater.website_path, "index.html")
            if os.path.exists(index_path):
                webbrowser.open(f"file://{os.path.abspath(index_path)}")
            else:
                messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå index.html")
        except Exception as e:
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    
    def open_manual(self):
        """‡πÄ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠"""
        try:
            manual_path = os.path.join(self.updater.website_path, "‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå.md")
            if os.path.exists(manual_path):
                webbrowser.open(f"file://{os.path.abspath(manual_path)}")
            else:
                messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠")
        except Exception as e:
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    
    def run(self):
        """‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô GUI"""
        self.root.mainloop()

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("üåê Website Update Tool - GreenBlueRest Bangkok")
    print("=" * 50)
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if not os.path.exists("index.html"):
        print("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ script ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå")
        print("   (‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå index.html)")
        return
    
    print("‚úÖ ‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÅ‡∏•‡πâ‡∏ß")
    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô GUI...")
    
    # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô GUI
    app = WebsiteUpdaterGUI()
    app.run()

if __name__ == "__main__":
    main()
